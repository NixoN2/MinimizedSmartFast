{
  "success": false,
  "error": "Traceback (most recent call last):\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/venv/lib/python3.7/site-packages/crytic_compile-0.1.9-py3.7.egg/crytic_compile/platform/solc.py\", line 367, in _run_solc\n    ret = json.loads(stdout)\n  File \"/usr/lib/python3.7/json/__init__.py\", line 348, in loads\n    return _default_decoder.decode(s)\n  File \"/usr/lib/python3.7/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/usr/lib/python3.7/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/__main__.py\", line 700, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/__main__.py\", line 68, in process_all\n    compilations = compile_all(target, **vars(args))\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/venv/lib/python3.7/site-packages/crytic_compile-0.1.9-py3.7.egg/crytic_compile/crytic_compile.py\", line 1019, in compile_all\n    compilations.append(CryticCompile(target, **kwargs))\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/venv/lib/python3.7/site-packages/crytic_compile-0.1.9-py3.7.egg/crytic_compile/crytic_compile.py\", line 123, in __init__\n    self._compile(**kwargs)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/venv/lib/python3.7/site-packages/crytic_compile-0.1.9-py3.7.egg/crytic_compile/crytic_compile.py\", line 930, in _compile\n    self._platform.compile(self, **kwargs)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/venv/lib/python3.7/site-packages/crytic_compile-0.1.9-py3.7.egg/crytic_compile/platform/solc.py\", line 156, in compile\n    force_legacy_json=force_legacy_json,\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/venv/lib/python3.7/site-packages/crytic_compile-0.1.9-py3.7.egg/crytic_compile/platform/solc.py\", line 371, in _run_solc\n    raise InvalidCompilation(f\"Invalid solc compilation {stderr}\")\ncrytic_compile.platform.exceptions.InvalidCompilation: Invalid solc compilation tests_etherscan/dataset_etherscan/GovernorAlpha__21.sol:35:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\r\n^-------------------------------^\ntests_etherscan/dataset_etherscan/GovernorAlpha__21.sol:9:31: Error: The \"chainid\" instruction is only available for Istanbul-compatible VMs  (you are currently compiling for \"petersburg\").\n        assembly { chainId := chainid() }\r\n                              ^-------^\ntests_etherscan/dataset_etherscan/GovernorAlpha__21.sol:568:30: Error: The \"chainid\" instruction is only available for Istanbul-compatible VMs  (you are currently compiling for \"petersburg\").\n        assembly {chainId := chainid()}\r\n                             ^-------^\n\n",
  "results": {}
}