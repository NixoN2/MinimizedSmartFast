{
  "success": false,
  "error": "Traceback (most recent call last):\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/__main__.py\", line 700, in main_impl\n    ) = process_all(filename, args, detector_classes, printer_classes)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/__main__.py\", line 79, in process_all\n    ) = process_single(compilation, args, detector_classes, printer_classes)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/__main__.py\", line 62, in process_single\n    slither = Slither(target, ast_format=ast, **vars(args))\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/slither.py\", line 105, in __init__\n    self._parser.analyze_contracts()\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/solc_parsing/slitherSolc.py\", line 361, in analyze_contracts\n    self._convert_to_slithir()\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/solc_parsing/slitherSolc.py\", line 508, in _convert_to_slithir\n    func.generate_slithir_and_analyze()\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/core/declarations/function.py\", line 1661, in generate_slithir_and_analyze\n    node.slithir_generation()\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/core/cfg/node.py\", line 709, in slithir_generation\n    self._irs = convert_expression(expression, self)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/slithir/convert.py\", line 101, in convert_expression\n    visitor = ExpressionToSlithIR(expression, node)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/slithir/expression_to_slithir.py\", line 125, in __init__\n    self._visit_expression(self.expression)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 51, in _visit_expression\n    self._visit_call_expression(expression)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 111, in _visit_call_expression\n    self._visit_expression(arg)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 48, in _visit_expression\n    self._visit_binary_operation(expression)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 105, in _visit_binary_operation\n    self._visit_expression(expression.expression_right)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 48, in _visit_expression\n    self._visit_binary_operation(expression)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 105, in _visit_binary_operation\n    self._visit_expression(expression.expression_right)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 63, in _visit_expression\n    self._visit_index_access(expression)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 132, in _visit_index_access\n    self._visit_expression(expression.expression_right)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 95, in _visit_expression\n    self._post_visit(expression)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/expression/expression.py\", line 274, in _post_visit\n    self._post_conditional_expression(expression)\n  File \"/home/smartcontract/SmartContract/slither-master-20201006/slither/visitors/slithir/expression_to_slithir.py\", line 313, in _post_conditional_expression\n    raise Exception(\"Ternary operator are not convertible to SlithIR {}\".format(expression))\nException: Ternary operator are not convertible to SlithIR if users[_addr].cycle > cycles.length - 1 then cycles.length - 1 else users[_addr].cycle\n",
  "results": {}
}