{"success": false, "error": "Traceback (most recent call last):\n  File \"securify/__main__.py\", line 290, in main\n    matches.extend(pattern.find_matches())\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/analyses/patterns/ir/base_interface_signatures_pattern.py\", line 18, in find_matches\n    for contract in self.get_cfg().contracts:\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/analyses/patterns/ir/abstract_ir_pattern.py\", line 10, in get_cfg\n    cfg = self.analysis_context.cfg\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/analyses/analysis.py\", line 81, in cfg\n    self._cfg = self.config.cfg_compiler(self)\n  File \"securify/__main__.py\", line 267, in <lambda>\n    cfg_compiler=lambda t: solidity_cfg_compiler.compile_cfg(t.ast).cfg,\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/solidity/solidity_cfg_compiler.py\", line 88, in compile_cfg\n    cfg = ast_attr.cfg\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/grammar/attributes/evaluators/evaluator_demand_base.py\", line 84, in __get__\n    return self.__evaluator.evaluate(instance, self.__name)\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/grammar/attributes/evaluators/evaluator_demand_iterative.py\", line 26, in evaluate\n    rule_info = self[node].resolve_rule(attribute)\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/grammar/attributes/__init__.py\", line 290, in resolve_rule\n    node_dependencies = {c.node: self.resolve_node(rule_node, c.node, rule_node_production) for c in rule.arguments}\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/grammar/attributes/__init__.py\", line 290, in <dictcomp>\n    node_dependencies = {c.node: self.resolve_node(rule_node, c.node, rule_node_production) for c in rule.arguments}\n  File \"/home/smartcontract/SmartContract/securify2-master/securify/grammar/__init__.py\", line 616, in resolve_node\n    raise AttributeError(f\"Semantic rule references unavailable child node '{requested}'.\")\nAttributeError: Semantic rule references unavailable child node 'body'.\n", "results": []}