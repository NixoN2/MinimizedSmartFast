[{"severity":1,"argument":"SOLIDITY_ADDRESS_HARDCODED","starting_column":50,"description_val":"0x0000000000000000000000000000000000000000); (tests_etherscan/dataset_etherscan/TokenRefund.sol)#354\n","context_ling":354,"text":"0x0000000000000000000000000000000000000000"},{"severity":1,"argument":"SOLIDITY_ADDRESS_HARDCODED","starting_column":49,"description_val":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE); (tests_etherscan/dataset_etherscan/TokenRefund.sol)#355\n","context_ling":355,"text":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},{"severity":2,"argument":"SOLIDITY_CALL_WITHOUT_DATA","starting_column":37,"description_val":"call.value(amount)(\"\"); (tests_etherscan/dataset_etherscan/TokenRefund.sol)#259\n","context_ling":259,"text":"call"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":8,"description_val":"for(uint256 i = 0; i < tokens.length;i++) { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#424\n","context_ling":424,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < proof.length; i++) { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#517\n","context_ling":517,"text":"for"},{"severity":3,"argument":"SOLIDITY_LOCKED_MONEY","starting_column":0,"description_val":"contract TokenRefund is FundsMgr, DSMath { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#606\n","context_ling":606,"text":"contract"},{"severity":1,"argument":"SOLIDITY_PRAGMAS_VERSION","starting_column":16,"description_val":"^0.6.11; (tests_etherscan/dataset_etherscan/TokenRefund.sol)#4\n","context_ling":4,"text":"^"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private constant ZERO_ADDRESS = IToken(0x0000000000000000000000000000000000000000); (tests_etherscan/dataset_etherscan/TokenRefund.sol)#354\n","context_ling":354,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private constant ETH_ADDRESS = IToken(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE); (tests_etherscan/dataset_etherscan/TokenRefund.sol)#355\n","context_ling":355,"text":"private"},{"severity":1,"argument":"SOLIDITY_SAFEMATH","starting_column":4,"description_val":"using SafeMath for uint256; (tests_etherscan/dataset_etherscan/TokenRefund.sol)#289\n","context_ling":289,"text":"using"},{"severity":1,"argument":"SOLIDITY_SAFEMATH","starting_column":4,"description_val":"using SafeMath for uint256; (tests_etherscan/dataset_etherscan/TokenRefund.sol)#351\n","context_ling":351,"text":"using"},{"severity":1,"argument":"SOLIDITY_SHOULD_NOT_BE_VIEW","starting_column":4,"description_val":"function isContract(address account) internal view returns (bool) { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#212\n","context_ling":212,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function changeOwner(address payable newOwner) public onlyOwner { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#27\n","context_ling":27,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function setUnlockedTime(uint256 newUnlockedTime) public onlyOwnerWithLockPeriod { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#31\n","context_ling":31,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function acceptOwner() public { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#36\n","context_ling":36,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function withdraw(address token, uint256 amount) public onlyOwnerWithLockPeriod { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#415\n","context_ling":415,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function withdrawAll(address[] memory tokens) public onlyOwnerWithLockPeriod { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#423\n","context_ling":423,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function claim(uint256 index, uint256 amount, bytes32[] memory merkleProof) public returns (uint256) { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#645\n","context_ling":645,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function claimByOwner(uint256 index, address account, uint256 amount, bytes32[] memory merkleProof) public onlyOwner returns (uint256) { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#652\n","context_ling":652,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function setTokenPrice(uint256 price) public onlyOwnerWithLockPeriod { (tests_etherscan/dataset_etherscan/TokenRefund.sol)#656\n","context_ling":656,"text":"function"},{"severity":1,"argument":"SOLIDITY_USING_INLINE_ASSEMBLY","starting_column":8,"description_val":"assembly { codehash := extcodehash(account) } (tests_etherscan/dataset_etherscan/TokenRefund.sol)#223\n","context_ling":223,"text":"assembly"},{"severity":1,"argument":"SOLIDITY_VISIBILITY","starting_column":4,"description_val":"uint constant WAD = 10 ** 18; (tests_etherscan/dataset_etherscan/TokenRefund.sol)#558\n","context_ling":558,"text":"uint"},{"severity":1,"argument":"SOLIDITY_VISIBILITY","starting_column":4,"description_val":"uint constant RAY = 10 ** 27; (tests_etherscan/dataset_etherscan/TokenRefund.sol)#559\n","context_ling":559,"text":"uint"}]