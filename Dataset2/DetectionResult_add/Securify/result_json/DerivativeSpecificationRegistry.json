{
  "tests_etherscan/dataset_etherscan/DerivativeSpecificationRegistry.sol:AddressRegistryParent": {
    "version": "unknown_version",
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [],
        "safe": [
          107
        ],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [
          113,
          120
        ],
        "warnings": [],
        "safe": [
          15,
          58,
          77,
          86,
          124
        ],
        "conflicts": []
      },
      "RepeatedCall": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": [
          79,
          89,
          116,
          117
        ]
      }
    },
    "securifyErrors": {
      "errors": []
    }
  },
  "tests_etherscan/dataset_etherscan/DerivativeSpecificationRegistry.sol:DerivativeSpecificationRegistry": {
    "version": "unknown_version",
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [
          113,
          120
        ],
        "warnings": [],
        "safe": [
          15,
          58,
          77,
          86,
          124,
          222
        ],
        "conflicts": []
      },
      "RepeatedCall": {
        "violations": [
          232,
          233,
          234,
          235,
          236,
          237,
          238,
          239,
          240
        ],
        "warnings": [
          234,
          235,
          236,
          237,
          238,
          239,
          240
        ],
        "safe": [
          225,
          227,
          232,
          233,
          234
        ],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [
          116,
          117
        ],
        "safe": [],
        "conflicts": [
          79,
          89
        ]
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "pattern_error",
          "stackTrace": "java.lang.RuntimeException\n\tat ch.securify.analysis.Dataflow.\u003cinit\u003e(Dataflow.java:37)\n\tat ch.securify.analysis.DataflowFactory.getDataflow(DataflowFactory.java:54)\n\tat ch.securify.Main.checkPatterns(Main.java:429)\n\tat ch.securify.Main.processHexFile(Main.java:189)\n\tat ch.securify.Main.processCompilationOutput(Main.java:129)\n\tat ch.securify.Main.processSolidityFile(Main.java:100)\n\tat ch.securify.Main.main(Main.java:254)\n"
        }
      ]
    }
  }
}