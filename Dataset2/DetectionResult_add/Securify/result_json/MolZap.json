{
  "tests_etherscan/dataset_etherscan/MolZap.sol:MolZap": {
    "version": "unknown_version",
    "results": {
      "DAO": {
        "violations": [
          95
        ],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [],
        "safe": [
          59
        ],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "RepeatedCall": {
        "violations": [],
        "warnings": [],
        "safe": [
          95,
          98,
          119,
          120,
          121,
          131,
          132
        ],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [
          95
        ],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [
          95
        ],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [
          95,
          98,
          119,
          120,
          121,
          131,
          132
        ],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [
          95
        ],
        "safe": [
          98,
          119,
          120,
          121,
          131,
          132
        ],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [
          -1
        ],
        "warnings": [
          109
        ],
        "safe": [],
        "conflicts": [
          -1,
          146,
          147,
          148,
          149
        ]
      }
    },
    "securifyErrors": {
      "errors": [
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:79)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:134)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:161)\n\tat ch.securify.Main.processCompilationOutput(Main.java:139)\n\tat ch.securify.Main.processSolidityFile(Main.java:100)\n\tat ch.securify.Main.main(Main.java:254)\n"
        },
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:79)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:134)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:161)\n\tat ch.securify.Main.processCompilationOutput(Main.java:139)\n\tat ch.securify.Main.processSolidityFile(Main.java:100)\n\tat ch.securify.Main.main(Main.java:254)\n"
        },
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:79)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:134)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:164)\n\tat ch.securify.Main.processCompilationOutput(Main.java:139)\n\tat ch.securify.Main.processSolidityFile(Main.java:100)\n\tat ch.securify.Main.main(Main.java:254)\n"
        },
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:79)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:134)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:164)\n\tat ch.securify.Main.processCompilationOutput(Main.java:139)\n\tat ch.securify.Main.processSolidityFile(Main.java:100)\n\tat ch.securify.Main.main(Main.java:254)\n"
        },
        {
          "error": "mapping_error",
          "stackTrace": "ch.securify.MappingNotFoundException\n\tat ch.securify.CompilationHelpers.bytecodeOffsetToSourceOffset(CompilationHelpers.java:79)\n\tat ch.securify.CompilationHelpers.getMatchedLines(CompilationHelpers.java:134)\n\tat ch.securify.CompilationHelpers.getMappingsFromStatusFile(CompilationHelpers.java:164)\n\tat ch.securify.Main.processCompilationOutput(Main.java:139)\n\tat ch.securify.Main.processSolidityFile(Main.java:100)\n\tat ch.securify.Main.main(Main.java:254)\n"
        }
      ]
    }
  },
  "tests_etherscan/dataset_etherscan/MolZap.sol:SafeMath": {
    "version": "unknown_version",
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [],
        "safe": [
          42
        ],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "RepeatedCall": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": []
    }
  }
}