[{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenHolders.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#250\n","context_ling":250,"text":"for"},{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":12,"description_val":"for (uint256 j = 0; j < tokenAddresses.length; j++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#251\n","context_ling":251,"text":"for"},{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":16,"description_val":"for (uint256 k = 0; k < partitions.length; k++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#252\n","context_ling":252,"text":"for"},{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenHolders.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#282\n","context_ling":282,"text":"for"},{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":12,"description_val":"for (uint256 j = 0; j < tokenAddresses.length; j++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#283\n","context_ling":283,"text":"for"},{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenAddresses.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#307\n","context_ling":307,"text":"for"},{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":12,"description_val":"for (uint256 j = 0; j < partitions.length; j++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#308\n","context_ling":308,"text":"for"},{"severity":1,"argument":"SOLIDITY_EXTRA_GAS_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenAddresses.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#328\n","context_ling":328,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenHolders.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#250\n","context_ling":250,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":12,"description_val":"for (uint256 j = 0; j < tokenAddresses.length; j++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#251\n","context_ling":251,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":16,"description_val":"for (uint256 k = 0; k < partitions.length; k++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#252\n","context_ling":252,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenHolders.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#282\n","context_ling":282,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":12,"description_val":"for (uint256 j = 0; j < tokenAddresses.length; j++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#283\n","context_ling":283,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenAddresses.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#307\n","context_ling":307,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":12,"description_val":"for (uint256 j = 0; j < partitions.length; j++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#308\n","context_ling":308,"text":"for"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < tokenAddresses.length; i++) { (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#328\n","context_ling":328,"text":"for"},{"severity":1,"argument":"SOLIDITY_PRAGMAS_VERSION","starting_column":16,"description_val":"^0.5.0; (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#1\n","context_ling":1,"text":"^"},{"severity":1,"argument":"SOLIDITY_VISIBILITY","starting_column":2,"description_val":"bytes32 constant ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\")); (tests_etherscan/dataset_etherscan/BatchBalanceReader.sol)#33\n","context_ling":33,"text":"bytes32"}]