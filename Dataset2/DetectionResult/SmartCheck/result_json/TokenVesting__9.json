[{"severity":1,"argument":"SOLIDITY_PRAGMAS_VERSION","starting_column":16,"description_val":"^0.5.2; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#1\n","context_ling":1,"text":"^"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":15,"description_val":"private _owners; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#344\n","context_ling":344,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private token; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#397\n","context_ling":397,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":12,"description_val":"private tokensToVest = 0; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#398\n","context_ling":398,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":12,"description_val":"private vestingId = 0; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#399\n","context_ling":399,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private constant INSUFFICIENT_BALANCE = \"Insufficient balance\"; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#401\n","context_ling":401,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private constant INVALID_VESTING_ID = \"Invalid vesting id\"; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#402\n","context_ling":402,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private constant VESTING_ALREADY_RELEASED = \"Vesting already released\"; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#403\n","context_ling":403,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private constant INVALID_BENEFICIARY = \"Invalid beneficiary address\"; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#404\n","context_ling":404,"text":"private"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":11,"description_val":"private constant NOT_VESTED = \"Tokens have not vested yet\"; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#405\n","context_ling":405,"text":"private"},{"severity":1,"argument":"SOLIDITY_SAFEMATH","starting_column":4,"description_val":"using SafeMath for uint256; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#236\n","context_ling":236,"text":"using"},{"severity":1,"argument":"SOLIDITY_SAFEMATH","starting_column":4,"description_val":"using SafeMath for uint256; (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#394\n","context_ling":394,"text":"using"},{"severity":1,"argument":"SOLIDITY_SHOULD_NOT_BE_VIEW","starting_column":4,"description_val":"function isContract(address account) internal view returns (bool) { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#208\n","context_ling":208,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function addOwner(address account) public onlyOwner { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#359\n","context_ling":359,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function renounceOwner() public { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#365\n","context_ling":365,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function getToken() public view returns (IERC20) { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#425\n","context_ling":425,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function beneficiary(uint256 _vestingId) public view returns (address) { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#429\n","context_ling":429,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function releaseTime(uint256 _vestingId) public view returns (uint256) { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#433\n","context_ling":433,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function vestingAmount(uint256 _vestingId) public view returns (uint256) { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#437\n","context_ling":437,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function removeVesting(uint256 _vestingId) public onlyOwner { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#441\n","context_ling":441,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function addVesting(address _beneficiary, uint256 _releaseTime, uint256 _amount) public onlyOwner { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#450\n","context_ling":450,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function release(uint256 _vestingId) public { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#463\n","context_ling":463,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function retrieveExcessTokens(uint256 _amount) public onlyOwner { (tests_etherscan/dataset_etherscan/TokenVesting__9.sol)#477\n","context_ling":477,"text":"function"}]