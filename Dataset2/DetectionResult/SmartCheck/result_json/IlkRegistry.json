[{"severity":1,"argument":"SOLIDITY_PRAGMAS_VERSION","starting_column":16,"description_val":"^0.6.7; (tests_etherscan/dataset_etherscan/IlkRegistry.sol)#18\n","context_ling":18,"text":"^"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":13,"description_val":"private gemInfo; (tests_etherscan/dataset_etherscan/IlkRegistry.sol)#91\n","context_ling":91,"text":"private"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":13,"description_val":"if (what == \"flip\") ilkData[ilk].flip = data; (tests_etherscan/dataset_etherscan/IlkRegistry.sol)#199\n","context_ling":199,"text":"if"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":8,"description_val":"if (what == \"dec\")       ilkData[ilk].dec  = data; (tests_etherscan/dataset_etherscan/IlkRegistry.sol)#205\n","context_ling":205,"text":"if"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":13,"description_val":"if (what == \"symbol\") ilkData[ilk].symbol = data; (tests_etherscan/dataset_etherscan/IlkRegistry.sol)#212\n","context_ling":212,"text":"if"},{"severity":1,"argument":"SOLIDITY_SHOULD_RETURN_STRUCT","starting_column":53,"description_val":"( (tests_etherscan/dataset_etherscan/IlkRegistry.sol)#262\n","context_ling":262,"text":"("},{"severity":1,"argument":"SOLIDITY_VISIBILITY","starting_column":4,"description_val":"bytes32[] ilks; (tests_etherscan/dataset_etherscan/IlkRegistry.sol)#105\n","context_ling":105,"text":"bytes32"}]