[{"severity":1,"argument":"SOLIDITY_ADDRESS_HARDCODED","starting_column":16,"description_val":"0x000f0e207c8F400C78bFc584baEb6Ce22eE5705D; // Address for Maintenance of service (UI Website, ADS and others) (tests_etherscan/dataset_etherscan/Etherlly.sol)#59\n","context_ling":59,"text":"0x000f0e207c8F400C78bFc584baEb6Ce22eE5705D"},{"severity":2,"argument":"SOLIDITY_DIV_MUL","starting_column":23,"description_val":"SafeMath.mul(SafeMath.div(TICKET_PRICE,100),50);      // Level 1 in chain get 50% of ticket (tests_etherscan/dataset_etherscan/Etherlly.sol)#256\n","context_ling":256,"text":"SafeMath"},{"severity":2,"argument":"SOLIDITY_DIV_MUL","starting_column":23,"description_val":"SafeMath.mul(SafeMath.div(TICKET_PRICE,100),20);      // Level 4 reference get 20% of ticket (tests_etherscan/dataset_etherscan/Etherlly.sol)#257\n","context_ling":257,"text":"SafeMath"},{"severity":2,"argument":"SOLIDITY_DIV_MUL","starting_column":23,"description_val":"SafeMath.mul(SafeMath.div(TICKET_PRICE,100),10);      // Level2 and Level 3 get 10% of ticket (tests_etherscan/dataset_etherscan/Etherlly.sol)#258\n","context_ling":258,"text":"SafeMath"},{"severity":1,"argument":"SOLIDITY_GAS_LIMIT_IN_LOOPS","starting_column":8,"description_val":"for (uint256 i = 0; i < _bens.length; i++){  (tests_etherscan/dataset_etherscan/Etherlly.sol)#127\n","context_ling":127,"text":"for"},{"severity":1,"argument":"SOLIDITY_PRAGMAS_VERSION","starting_column":16,"description_val":"^0.5.13; (tests_etherscan/dataset_etherscan/Etherlly.sol)#25\n","context_ling":25,"text":"^"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":8,"description_val":"if(chains[_ref].id <= 0) {                                      // Check if Refer exist (tests_etherscan/dataset_etherscan/Etherlly.sol)#201\n","context_ling":201,"text":"if"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":8,"description_val":"if(chains[msg.sender].id > 0) {                      // User already exists in the Etherlly (tests_etherscan/dataset_etherscan/Etherlly.sol)#204\n","context_ling":204,"text":"if"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":12,"description_val":"if(chainsLabel[_label] > address(0x0)){ (tests_etherscan/dataset_etherscan/Etherlly.sol)#208\n","context_ling":208,"text":"if"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":8,"description_val":"if(msg.value < TICKET_PRICE){                                   // Min value to sign in Etherlly contract (tests_etherscan/dataset_etherscan/Etherlly.sol)#212\n","context_ling":212,"text":"if"},{"severity":1,"argument":"SOLIDITY_SHOULD_NOT_BE_PURE","starting_column":4,"description_val":"function b2A(bytes memory _inBytes) private pure returns (address outAddress) { (tests_etherscan/dataset_etherscan/Etherlly.sol)#297\n","context_ling":297,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":2,"description_val":"function setSysman(address _newSysman) public onlySysman { (tests_etherscan/dataset_etherscan/Etherlly.sol)#65\n","context_ling":65,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":2,"description_val":"function setWallet(address _newWallet) public onlySysman { (tests_etherscan/dataset_etherscan/Etherlly.sol)#68\n","context_ling":68,"text":"function"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":4,"description_val":"function disETY(address[] memory  _bens, uint256 amount) public onlySysman { (tests_etherscan/dataset_etherscan/Etherlly.sol)#126\n","context_ling":126,"text":"function"},{"severity":1,"argument":"SOLIDITY_USING_INLINE_ASSEMBLY","starting_column":8,"description_val":"assembly{ (tests_etherscan/dataset_etherscan/Etherlly.sol)#298\n","context_ling":298,"text":"assembly"}]