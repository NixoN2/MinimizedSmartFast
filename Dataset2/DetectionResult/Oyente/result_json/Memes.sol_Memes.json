{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "/dataset/dataset_etherscan/Memes.sol:463:29: Warning: Integer Overflow.\n      string storage ipfs = i.ipfsHash\nInteger Overflow occurs if:\n    tokenOwner[_tokenId] = 1461501637330902918203684832716283019655932542975", 
   "/dataset/dataset_etherscan/Memes.sol:464:20: Warning: Integer Overflow.\n      URI = string(abi.encodePacked(baseurl, ipfs)\nInteger Overflow occurs if:\n    abi.encodePacked(baseurl, ipfs) = 115792075433823501842443410139176183124994507899902049034184219341532176580353\n    abi.encodePacked(baseurl, ipfs) = 0\n    tokenOwner[_tokenId] = 1461501637330902918203684832716283019655932542975", 
   "/dataset/dataset_etherscan/Memes.sol:400:33: Warning: Integer Overflow.\n        ipfsaddresses[ipfsID] = IpfsAddress(ipfsID, newHash)\nInteger Overflow occurs if:\n    owner = 0", 
   "/dataset/dataset_etherscan/Memes.sol:309:14: Warning: Integer Overflow.\n      return ownedTokens[_owner][_index]\nInteger Overflow occurs if:\n    ownedTokens[_owner][_index] = 105782898658114362639998236590588058411517566113314665475433552748888561006559\n    ownedTokensCount[_owner] = 105782898658114362639998236590588058411517566113314665475433552748888561006559", 
   "/dataset/dataset_etherscan/Memes.sol:318:14: Warning: Integer Overflow.\n      return allTokens[_index]\nInteger Overflow occurs if:\n    allTokens.length = 105782898658114362639998236590588058411517566113314665475433552748888561006559", 
   "/dataset/dataset_etherscan/Memes.sol:229:4: Warning: Integer Overflow.\n\t  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes _data) public canTransfer(_tokenId) {\r\n\t  ^\nSpanning multiple lines.", 
   "/dataset/dataset_etherscan/Memes.sol:396:21: Warning: Integer Overflow.\n        _ipfsHash = i.ipfsHash", 
   "/dataset/dataset_etherscan/Memes.sol:403:5: Warning: Integer Overflow.\n    function manageBaseURL(string new_baseurl) public onlyOwner {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    new_baseurl = 115792089237316195423570985008687907853269984665640564039457584007913129639935"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "/dataset/dataset_etherscan/Memes.sol:2:1: Warning: Integer Underflow.\n\r\n^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    abi.encodePacked(baseurl, ipfs) = 32\n    abi.encodePacked(baseurl, ipfs) = 689\n    tokenOwner[_tokenId] = 1461501637330902918203684832716283019655932542975", 
   "/dataset/dataset_etherscan/Memes.sol:396:9: Warning: Integer Underflow.\n        _ipfsHash = i.ipfsHash", 
   "/dataset/dataset_etherscan/Memes.sol:460:5: Warning: Integer Underflow.\n    function tokenURI(uint256 _ID) public view returns (string URI) {\r\n    ^\nSpanning multiple lines.\nInteger Underflow occurs if:\n    abi.encodePacked(baseurl, ipfs) = 545\n    abi.encodePacked(baseurl, ipfs) = 0\n    tokenOwner[_tokenId] = 1461501637330902918203684832716283019655932542975", 
   "/dataset/dataset_etherscan/Memes.sol:1:23: Warning: Integer Underflow.\n\nInteger Underflow occurs if:\n    abi.encodePacked(baseurl, ipfs) = 32\n    abi.encodePacked(baseurl, ipfs) = 643\n    tokenOwner[_tokenId] = 1461501637330902918203684832716283019655932542975", 
   "/dataset/dataset_etherscan/Memes.sol:464:20: Warning: Integer Underflow.\n      URI = string(abi.encodePacked(baseurl, ipfs)\nInteger Underflow occurs if:\n    abi.encodePacked(baseurl, ipfs) = 1\n    tokenOwner[_tokenId] = 1461501637330902918203684832716283019655932542975", 
   "/dataset/dataset_etherscan/Memes.sol:305:54: Warning: Integer Underflow.\n\t  function symbol() external view returns (string) {return symbol_\nInteger Underflow occurs if:\n    return symbol_ = 1", 
   "/dataset/dataset_etherscan/Memes.sol:408:7: Warning: Integer Underflow.\n      base_url = baseurl", 
   "/dataset/dataset_etherscan/Memes.sol:303:52: Warning: Integer Underflow.\n\t  function name() external view returns (string) {return name_\nInteger Underflow occurs if:\n    return name_ = 1"
  ], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "53.0"
}