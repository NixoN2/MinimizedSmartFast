{
 "vulnerabilities": {
  "callstack": [
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:581:5: Warning: Callstack Depth Attack Vulnerability.\n    advertisingAddress.send(m_advertisingPercent.mul(receivedEther))", 
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:582:5: Warning: Callstack Depth Attack Vulnerability.\n    adminsAddress.send(m_adminsPercent.mul(receivedEther))"
  ], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:555:5: Warning: Integer Overflow.\n    require(address(this).balance <= maxBalance, \"the contract eth balance limit\")", 
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:490:3: Warning: Integer Overflow.\n  function privateEntranceProvideAccessFor(address[] addrs) public onlyOwner {\r\n  ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    addrs = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:423:5: Warning: Integer Overflow.\n    require(msg.sender.isNotContract(), \"only externally accounts\")", 
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:236:31: Warning: Integer Overflow.\n    (uint currInvestment, ) = pe.rev2Storage.investorInfo(investorAddr)", 
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:554:5: Warning: Integer Overflow.\n    require(investment >= minInvesment, \"investment must be >= minInvesment\")", 
   "/dataset/dataset_etherscan/DeFiEtherFund.sol:28:5: Warning: Integer Overflow.\n    require(val != 0, \"require not zero value\")"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "41.5"
}