{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:178:49: Warning: Integer Overflow.\n        } else if (amount >= MINIMUM_INVEST && !investors[userAddress].active", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:159:9: Warning: Integer Overflow.\n        require(amount == 0 || amount >= MINIMUM_INVEST, \"Min Amount for investing is MINIMUM_INVEST.\")", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:164:22: Warning: Integer Overflow.\n            require(!investors[userAddress].typePlan\nInteger Overflow occurs if:\n    investors[userAddress].active = 372682917519380244141939632342652170012262798458880", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:214:16: Warning: Integer Overflow.\n        return investors[_deposit].dateUpdate", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:166:36: Warning: Integer Overflow.\n            uint256 amountProfit = getProfit(investors[userAddress])\nInteger Overflow occurs if:\n    investors[userAddress].active = 1461501637330902918203684832716283019655932542976\n    investors[userAddress].dateEnd = 0", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:127:5: Warning: Integer Overflow.\n    function getRefer(bytes bys) public pure returns (address addr) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    bys = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:162:28: Warning: Integer Overflow.\n        if (amount == 0 && investors[userAddress].active", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:164:64: Warning: Integer Overflow.\n            require(!investors[userAddress].typePlan && now <= investors[userAddress].dateEnd\nInteger Overflow occurs if:\n    investors[userAddress].active = 372682917519380244141939632342652170012262798458880", 
   "/dataset/dataset_etherscan/ALTESFINANCEGROUP.sol:164:13: Warning: Integer Overflow.\n            require(!investors[userAddress].typePlan && now <= investors[userAddress].dateEnd, 'the Deposit is not finished')\nInteger Overflow occurs if:\n    investors[userAddress].active = 95779509802480722744478485512061607693151539203932160"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "27.5"
}