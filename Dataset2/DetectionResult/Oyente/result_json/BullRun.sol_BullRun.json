{
 "vulnerabilities": {
  "callstack": [
   "/dataset/dataset_etherscan/BullRun.sol:570:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool8Currentuser)).send(pool8_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:477:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool5Currentuser)).send(pool5_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:444:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool4Currentuser)).send(pool4_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:412:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool3Currentuser)).send(pool3_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:538:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool7Currentuser)).send(pool7_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:507:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool6Currentuser)).send(pool6_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:300:20: Warning: Callstack Depth Attack Vulnerability.\n            sent = address(uint160(referer)).send(level_price_local)", 
   "/dataset/dataset_etherscan/BullRun.sol:380:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool2Currentuser)).send(pool2_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:654:15: Warning: Callstack Depth Attack Vulnerability.\n         if (!address(uint160(ownerWallet)).send(getEthBalance())", 
   "/dataset/dataset_etherscan/BullRun.sol:603:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool9Currentuser)).send(pool9_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:635:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool10Currentuser)).send(pool10_price)", 
   "/dataset/dataset_etherscan/BullRun.sol:345:15: Warning: Callstack Depth Attack Vulnerability.\n       sent = address(uint160(pool1Currentuser)).send(pool1_price)"
  ], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "0.1"
}