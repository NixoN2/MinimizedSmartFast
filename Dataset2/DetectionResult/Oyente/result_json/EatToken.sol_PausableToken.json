{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "/dataset/dataset_etherscan/EatToken.sol:271:5: Warning: Integer Overflow.\n    function approveAndCall(address spender, uint tokens, bytes memory data) public returns (bool success) {\r\n    ^\nSpanning multiple lines.", 
   "/dataset/dataset_etherscan/EatToken.sol:434:5: Warning: Integer Overflow.\n    function batchTransferValues(address[] _receivers, uint256[] _values) public whenNotPaused returns (bool) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _receivers = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "/dataset/dataset_etherscan/EatToken.sol:462:5: Warning: Integer Overflow.\n    function batchFreeze(address[] _addresses, bool _freeze) onlyOwner public {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _addresses = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "/dataset/dataset_etherscan/EatToken.sol:98:13: Warning: Integer Overflow.\n        c = a + b\nInteger Overflow occurs if:\n    balances[_to] = 95515132405035013240498949941729301185179799140209929091396633094036584928231\n    allowed[_from][msg.sender] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    balances[_from] = 37717208912933073374861050775867160511051478474789766132129094234564326678807\n    frozenAccount[_from] = 0\n    paused = 0", 
   "/dataset/dataset_etherscan/EatToken.sol:413:5: Warning: Integer Overflow.\n    function batchTransfer(address[] _receivers, uint256 _value) public whenNotPaused returns (bool) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _receivers = 115792089237316195423570985008687907853269984665640564039457584007913129639935"
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "62.2"
}