{
 "vulnerabilities": {
  "callstack": [], 
  "time_dependency": [], 
  "reentrancy": [], 
  "integer_overflow": [
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1874:88: Warning: Integer Overflow.\n        return(reserve.virtualBalance, reserve.ratio, reserve.isVirtualBalanceEnabled, reserve.isSaleEnabled", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1604:5: Warning: Integer Overflow.\n    function quickConvertPrioritized2(IERC20Token[] _path, uint256 _amount, uint256 _minReturn, uint256[] memory _signature, address _affiliateAccount, uint256 _affiliateFee)\r\n    ^\nSpanning multiple lines.", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1651:5: Warning: Integer Overflow.\n    function completeXConversion2(\r\n    ^\nSpanning multiple lines.", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1874:40: Warning: Integer Overflow.\n        return(reserve.virtualBalance, reserve.ratio", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1194:9: Warning: Integer Overflow.\n        reserves[_token].ratio\nInteger Overflow occurs if:\n    totalReserveRatio = 16960\n    reserves[_token].isSet = 0\n    token = 365375409332725729550921208179070754913983135743\n    owner = 0", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1874:111: Warning: Integer Overflow.\n        return(reserve.virtualBalance, reserve.ratio, reserve.isVirtualBalanceEnabled, reserve.isSaleEnabled, reserve.isSet", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1195:9: Warning: Integer Overflow.\n        reserves[_token].isVirtualBalanceEnabled\nInteger Overflow occurs if:\n    totalReserveRatio = 16960\n    reserves[_token].isSet = 0\n    token = 365375409332725729550921208179070754913983135743\n    owner = 0", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1269:9: Warning: Integer Overflow.\n        reserves[_reserveToken].isSaleEnabled\nInteger Overflow occurs if:\n    reserves[_address].isSet = 71776119061217280\n    owner = 0", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1874:55: Warning: Integer Overflow.\n        return(reserve.virtualBalance, reserve.ratio, reserve.isVirtualBalanceEnabled", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1881:16: Warning: Integer Overflow.\n        return BancorConverter.reserveTokens[_index]\nInteger Overflow occurs if:\n    _index = 105782898658114362639998236590588058411517566113314665475433552748888561006558", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1197:9: Warning: Integer Overflow.\n        reserves[_token].isSaleEnabled\nInteger Overflow occurs if:\n    totalReserveRatio = 16960\n    reserves[_token].isSet = 0\n    token = 365375409332725729550921208179070754913983135743\n    owner = 0", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1198:9: Warning: Integer Overflow.\n        reserves[_token].isSet\nInteger Overflow occurs if:\n    totalReserveRatio = 16960\n    reserves[_token].isSet = 0\n    token = 365375409332725729550921208179070754913983135743\n    owner = 0", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1858:5: Warning: Integer Overflow.\n    function quickConvertPrioritized(IERC20Token[] _path, uint256 _amount, uint256 _minReturn, uint256 _block, uint8 _v, bytes32 _r, bytes32 _s) public payable returns (uint256) {\r\n    ^\nSpanning multiple lines.\nInteger Overflow occurs if:\n    _path = 115792089237316195423570985008687907853269984665640564039457584007913129639935", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1865:5: Warning: Integer Overflow.\n    function completeXConversion(IERC20Token[] _path, uint256 _minReturn, uint256 _conversionId, uint256 _block, uint8 _v, bytes32 _r, bytes32 _s) public returns (uint256) {\r\n    ^\nSpanning multiple lines."
  ], 
  "parity_multisig_bug_2": [], 
  "integer_underflow": [
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:914:5: Warning: Integer Underflow.\n    string public converterType = 'bancor'", 
   "/dataset/dataset_etherscan/BancorConverterFactory.sol:1141:29: Warning: Integer Underflow.\n        return _amount.mul((CONVERSION_FEE_RESOLUTION - conversionFee\nInteger Underflow occurs if:\n    conversionFee = 18446762520453625325551616"
  ], 
  "money_concurrency": [], 
  "assertion_failure": []
 }, 
 "evm_code_coverage": "37.2"
}