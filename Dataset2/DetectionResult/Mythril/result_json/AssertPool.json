{"error": null, "issues": [{"address": 163, "code": "ress[] public _KContractOwners = [\n                address(0x7630A0f21Ac2FDe268eF62eBb1B06876DFe71909)\n    ];\n   ", "contract": "KOwnerable", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "tests_etherscan/dataset_etherscan/AssertPool.sol", "function": "_KContractOwners(uint256)", "lineno": 4, "max_gas_used": 1118, "min_gas_used": 1023, "severity": "Medium", "sourceMap": ":::-", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063812f4a5214602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506098565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000818154811060a457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a7231582048bdeb5191aed3e8cb3a842718bf4978642973ecdba2c20b7196ebf6582bb05a64736f6c63430005100032", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60806040526040518060200160405280737630a0f21ac2fde268ef62ebb1b06876dfe7190973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525060009060016100639291906100dc565b5034801561007057600080fd5b5060003390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101a9565b828054828255906000526020600020908101928215610155579160200282015b828111156101545782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906100fc565b5b5090506101629190610166565b5090565b6101a691905b808211156101a257600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161016c565b5090565b90565b610108806101b86000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063812f4a5214602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506098565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000818154811060a457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a7231582048bdeb5191aed3e8cb3a842718bf4978642973ecdba2c20b7196ebf6582bb05a64736f6c63430005100032", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x812f4a520000000000000000000000000000000000000000000000000000000000000002", "input": "0x812f4a520000000000000000000000000000000000000000000000000000000000000002", "name": "_KContractOwners(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}}, {"address": 302, "code": "ress[] public _KContractOwners = [\n                address(0x7630A0f21Ac2FDe268eF62eBb1B06876DFe71909)\n    ];\n   ", "contract": "KState", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "tests_etherscan/dataset_etherscan/AssertPool.sol", "function": "_KContractOwners(uint256)", "lineno": 4, "max_gas_used": 1140, "min_gas_used": 1045, "severity": "Medium", "sourceMap": "62:113::-", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630cfd280f14610046578063812f4a5214610064578063aa7046c6146100d2575b600080fd5b61004e61011c565b6040518082815260200191505060405180910390f35b6100906004803603602081101561007a57600080fd5b8101908080359060200190929190505050610122565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100da61015e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60015481565b6000818154811061012f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a72315820d0c1f0079604fc80e3967220746ceaaee6aeb34ddb81163f6b7d05c1c201347864736f6c63430005100032", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldatainput": "0x60806040526040518060200160405280737630a0f21ac2fde268ef62ebb1b06876dfe7190973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506000906001610063929190610117565b5034801561007057600080fd5b506040516103ac3803806103ac8339818101604052602081101561009357600080fd5b810190808051906020019092919050505060003390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600181905550506101e4565b828054828255906000526020600020908101928215610190579160200282015b8281111561018f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610137565b5b50905061019d91906101a1565b5090565b6101e191905b808211156101dd57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016101a7565b5090565b90565b6101b9806101f36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630cfd280f14610046578063812f4a5214610064578063aa7046c6146100d2575b600080fd5b61004e61011c565b6040518082815260200191505060405180910390f35b6100906004803603602081101561007a57600080fd5b8101908080359060200190929190505050610122565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100da61015e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60015481565b6000818154811061012f57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a72315820d0c1f0079604fc80e3967220746ceaaee6aeb34ddb81163f6b7d05c1c201347864736f6cname": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x812f4a520000000000000000000000000000000000000000000000000000000000000002", "input": "0x812f4a520000000000000000000000000000000000000000000000000000000000000002", "name": "_KContractOwners(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}}], "success": true}