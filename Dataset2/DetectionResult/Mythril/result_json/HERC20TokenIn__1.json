{"error": null, "issues": [{"address": 163, "code": "uire(\n            token", "contract": "HandlerBase", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "tests_etherscan/dataset_etherscan/HERC20TokenIn__1.sol", "function": "tokens(uint256)", "lineno": 416, "max_gas_used": 1118, "min_gas_used": 1023, "severity": "Medium", "sourceMap": ":::-", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "6080604052348015600f57600080fd5b506004361060285760003560e01c80634f64b2be14602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506098565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000818154811060a457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a723158209a286ca28230a4e61705462d0c8c71e9ab3c16fca2cc9e9173d2453fb7da385664736f6c63430005100032", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b50610108806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634f64b2be14602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506098565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000818154811060a457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a723158209a286ca28230a4e61705462d0c8c71e9ab3c16fca2cc9e9173d2453fb7da385664736f6c63430005100032", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4f64b2be0000000000000000000000000000000000000000000000000000000000000000", "input": "0x4f64b2be0000000000000000000000000000000000000000000000000000000000000000", "name": "tokens(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}}, {"address": 387, "code": "uire(\n            token", "contract": "HERC20TokenIn", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "tests_etherscan/dataset_etherscan/HERC20TokenIn__1.sol", "function": "tokens(uint256)", "lineno": 416, "max_gas_used": 1118, "min_gas_used": 1023, "severity": "Medium", "sourceMap": "15388:23", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "6080604052600436106100295760003560e01c80634f64b2be1461002e578063d0797f84146100a9575b600080fd5b34801561003a57600080fd5b506100676004803603602081101561005157600080fd5b8101908080359060200190929190505050610177565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610175600480360360408110156100bf57600080fd5b81019080803590602001906401000000008111156100dc57600080fd5b8201836020820111156100ee57600080fd5b8035906020019184602083028401116401000000008311171561011057600080fd5b90919293919293908035906020019064010000000081111561013157600080fd5b82018360208201111561014357600080fd5b8035906020019184602083028401116401000000008311171561016557600080fd5b90919293919293905050506101b3565b005b6000818154811061018457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81819050848490501461022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f746f6b656e20616e6420616d6f756e7420646f6573206e6f74206d617463680081525060200191505060405180910390fd5b60008090505b848490508110156102e4576102a6333085858581811061025057fe5b9050602002013588888681811061026357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102eb909392919063ffffffff16565b6102d78585838181106102b557fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166103f1565b8080600101915050610234565b5050505050565b6103eb848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061045a565b50505050565b60008190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6104798273ffffffffffffffffffffffffffffffffffffffff166106a5565b6104eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061053a5780518252602082019150602081019050602083039250610517565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461059c576040519150601f19603f3d011682016040523d82523d6000602084013e6105a1565b606091505b509150915081610619576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561069f5780806020019051602081101561063857600080fd5b810190808051906020019092919050505061069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806106f1602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156106e757506000801b8214155b9250505091905056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582020aaa029ea6f59d632a704220f2c90502c4e84f36f0f280809321767247c1e9864736f6c63430005100032", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b5061074f806100206000396000f3fe6080604052600436106100295760003560e01c80634f64b2be1461002e578063d0797f84146100a9575b600080fd5b34801561003a57600080fd5b506100676004803603602081101561005157600080fd5b8101908080359060200190929190505050610177565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610175600480360360408110156100bf57600080fd5b81019080803590602001906401000000008111156100dc57600080fd5b8201836020820111156100ee57600080fd5b8035906020019184602083028401116401000000008311171561011057600080fd5b90919293919293908035906020019064010000000081111561013157600080fd5b82018360208201111561014357600080fd5b8035906020019184602083028401116401000000008311171561016557600080fd5b90919293919293905050506101b3565b005b6000818154811061018457fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b81819050848490501461022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f746f6b656e20616e6420616d6f756e7420646f6573206e6f74206d617463680081525060200191505060405180910390fd5b60008090505b848490508110156102e4576102a6333085858581811061025057fe5b9050602002013588888681811061026357fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102eb909392919063ffffffff16565b6102d78585838181106102b557fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff166103f1565b8080600101915050610234565b5050505050565b6103eb848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061045a565b50505050565b60008190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6104798273ffffffffffffffffffffffffffffffffffffffff166106a5565b6104eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b6020831061053a5780518252602082019150602081019050602083039250610517565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461059c576040519150601f19603f3d011682016040523d82523d6000602084013e6105a1565b606091505b509150915081610619576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561069f5780806020019051602081101561063857600080fd5b810190808051906020019092919050505061069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806106f1602a913960400191505060405180910390fd5b5b50505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156106e757506000801b8214155b9250505091905056fe5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582020aaa029ea6f59d632a704220f2c90502c4e84f36f0f280809321767247c1e9864736f6c63430005100032", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4f64b2be0000000000000000000000000000000000000000000000000000000000000000", "input": "0x4f64b2be0000000000000000000000000000000000000000000000000000000000000000", "name": "tokens(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}], "success": true}