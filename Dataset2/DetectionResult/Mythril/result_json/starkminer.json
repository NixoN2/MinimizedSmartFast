{"error": null, "issues": [{"address": 115, "code": "uint256(blockhash(block.number-1)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-1)) % 7700;\n            return (crew, block.number-1);\n        }else if(uint256(blockhash(block.number-2)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-2)) % 7700;\n            return (crew, block.number-2);\n        } else if(uint256(blockhash(block.number-3)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-3)) % 7700;\n            return (crew, block.number-3);\n        }else if(uint256(blockhash(block.number-4)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-4)) % 7700;\n            return (crew, block.number-4);\n        }else if(uint256(blockhash(block.number-5)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-5)) % 7700;\n            return (crew, block.number-5);\n        } else if(uint256(blockhash(block.number-6)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-6)) % 7700;\n            return (crew, block.number-6);\n        } else if(uint256(blockhash(block.number-7)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-7)) % 7700;\n            return (crew, block.number-7);\n        } else if(uint256(blockhash(block.number-8)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-8)) % 7700;\n            return (crew, block.number-8);\n        } else if(uint256(blockhash(block.number-9)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-9)) % 7700;\n            return (crew, block.number-9);\n        } else if(uint256(blockhash(block.number-10)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-10)) % 7700;\n            return (crew, block.number-10);\n        } else if(uint256(blockhash(block.number-11)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-11)) % 7700;\n            return (crew, block.number-11);\n        } else if(uint256(blockhash(block.number-12)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-12)) % 7700;\n            return (crew, block.number-12);\n        } else if(uint256(blockhash(block.number-13)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-13)) % 7700;\n            return (crew, block.number-13);\n        } else if(uint256(blockhash(block.number-14)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-14)) % 7700;\n            return (crew, block.number-14);\n        } else if(uint256(blockhash(block.number-15)) % 7700 == 1){\n            uint256 crew = uint256(blockhash(block.number-15)) % 7700;\n            return (crew, block.number-15);\n        }else {\n            uint256 crew = uint256(blockhash(block.number-1)) % 7700;\n            return (crew, block.number-1);\n        }\n    }\n}", "contract": "starkminer", "description": "A control flow decision is made based on The block hash of a previous block.\nThe block hash of a previous block is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "tests_etherscan/dataset_etherscan/starkminer.sol", "function": "checklasttwentyblock()", "lineno": 4, "max_gas_used": 285, "min_gas_used": 190, "severity": "Low", "sourceMap": "133:2886", "swc-id": "120", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0x901d12ebe1b195e5aa8748e62bd7734ae19b51f": {"balance": "0x0", "code": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d9bc389c14610030575b600080fd5b610038610055565b604051808381526020018281526020019250505060405180910390f35b6000806001611e14600143034060001c8161006c57fe5b061415610099576000611e14600143034060001c8161008757fe5b06905080600143039250925050610449565b6001611e14600243034060001c816100ad57fe5b0614156100da576000611e14600243034060001c816100c857fe5b06905080600243039250925050610449565b6001611e14600343034060001c816100ee57fe5b06141561011b576000611e14600343034060001c8161010957fe5b06905080600343039250925050610449565b6001611e14600443034060001c8161012f57fe5b06141561015c576000611e14600443034060001c8161014a57fe5b06905080600443039250925050610449565b6001611e14600543034060001c8161017057fe5b06141561019d576000611e14600543034060001c8161018b57fe5b06905080600543039250925050610449565b6001611e14600643034060001c816101b157fe5b0614156101de576000611e14600643034060001c816101cc57fe5b06905080600643039250925050610449565b6001611e14600743034060001c816101f257fe5b06141561021f576000611e14600743034060001c8161020d57fe5b06905080600743039250925050610449565b6001611e14600843034060001c8161023357fe5b061415610260576000611e14600843034060001c8161024e57fe5b06905080600843039250925050610449565b6001611e14600943034060001c8161027457fe5b0614156102a1576000611e14600943034060001c8161028f57fe5b06905080600943039250925050610449565b6001611e14600a43034060001c816102b557fe5b0614156102e2576000611e14600a43034060001c816102d057fe5b06905080600a43039250925050610449565b6001611e14600b43034060001c816102f657fe5b061415610323576000611e14600b43034060001c8161031157fe5b06905080600b43039250925050610449565b6001611e14600c43034060001c8161033757fe5b061415610364576000611e14600c43034060001c8161035257fe5b06905080600c43039250925050610449565b6001611e14600d43034060001c8161037857fe5b0614156103a5576000611e14600d43034060001c8161039357fe5b06905080600d43039250925050610449565b6001611e14600e43034060001c816103b957fe5b0614156103e6576000611e14600e43034060001c816103d457fe5b06905080600e43039250925050610449565b6001611e14600f43034060001c816103fa57fe5b061415610427576000611e14600f43034060001c8161041557fe5b06905080600f43039250925050610449565b6000611e14600143034060001c8161043b57fe5b069050806001430392509250505b909156fea2646970667358221220d8aa8198fe637bb57ed8da587a1e1248f3483eae1853a1d8694c64b7c5c6fa0864736f6c63430006060033", "nonce": 0, "storage": "{}"}, "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b50610483806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d9bc389c14610030575b600080fd5b610038610055565b604051808381526020018281526020019250505060405180910390f35b6000806001611e14600143034060001c8161006c57fe5b061415610099576000611e14600143034060001c8161008757fe5b06905080600143039250925050610449565b6001611e14600243034060001c816100ad57fe5b0614156100da576000611e14600243034060001c816100c857fe5b06905080600243039250925050610449565b6001611e14600343034060001c816100ee57fe5b06141561011b576000611e14600343034060001c8161010957fe5b06905080600343039250925050610449565b6001611e14600443034060001c8161012f57fe5b06141561015c576000611e14600443034060001c8161014a57fe5b06905080600443039250925050610449565b6001611e14600543034060001c8161017057fe5b06141561019d576000611e14600543034060001c8161018b57fe5b06905080600543039250925050610449565b6001611e14600643034060001c816101b157fe5b0614156101de576000611e14600643034060001c816101cc57fe5b06905080600643039250925050610449565b6001611e14600743034060001c816101f257fe5b06141561021f576000611e14600743034060001c8161020d57fe5b06905080600743039250925050610449565b6001611e14600843034060001c8161023357fe5b061415610260576000611e14600843034060001c8161024e57fe5b06905080600843039250925050610449565b6001611e14600943034060001c8161027457fe5b0614156102a1576000611e14600943034060001c8161028f57fe5b06905080600943039250925050610449565b6001611e14600a43034060001c816102b557fe5b0614156102e2576000611e14600a43034060001c816102d057fe5b06905080600a43039250925050610449565b6001611e14600b43034060001c816102f657fe5b061415610323576000611e14600b43034060001c8161031157fe5b06905080600b43039250925050610449565b6001611e14600c43034060001c8161033757fe5b061415610364576000611e14600c43034060001c8161035257fe5b06905080600c43039250925050610449565b6001611e14600d43034060001c8161037857fe5b0614156103a5576000611e14600d43034060001c8161039357fe5b06905080600d43039250925050610449565b6001611e14600e43034060001c816103b957fe5b0614156103e6576000611e14600e43034060001c816103d457fe5b06905080600e43039250925050610449565b6001611e14600f43034060001c816103fa57fe5b061415610427576000611e14600f43034060001c8161041557fe5b06905080600f43039250925050610449565b6000611e14600143034060001c8161043b57fe5b069050806001430392509250505b909156fea2646970667358221220d8aa8198fe637bb57ed8da587a1e1248f3483eae1853a1d8694c64b7c5c6fa0864736f6c63430006060033", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd9bc389c", "input": "0xd9bc389c", "name": "checklasttwentyblock()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}], "success": true}