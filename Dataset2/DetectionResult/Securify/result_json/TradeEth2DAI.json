{
  "tests_etherscan/dataset_etherscan/TradeEth2DAI.sol:TradeEth2DAI": {
    "version": "unknown_version",
    "results": {
      "DAO": {
        "violations": [],
        "warnings": [],
        "safe": [
          89
        ],
        "conflicts": []
      },
      "DAOConstantGas": {
        "violations": [],
        "warnings": [],
        "safe": [
          97
        ],
        "conflicts": []
      },
      "LockedEther": {
        "violations": [],
        "warnings": [],
        "safe": [
          29
        ],
        "conflicts": []
      },
      "MissingInputValidation": {
        "violations": [],
        "warnings": [],
        "safe": [],
        "conflicts": []
      },
      "RepeatedCall": {
        "violations": [
          91,
          96,
          97,
          243,
          244,
          347,
          349,
          352,
          355,
          362,
          383,
          388
        ],
        "warnings": [],
        "safe": [
          89,
          94,
          202,
          203
        ],
        "conflicts": []
      },
      "TODAmount": {
        "violations": [],
        "warnings": [
          97
        ],
        "safe": [
          89
        ],
        "conflicts": []
      },
      "TODReceiver": {
        "violations": [],
        "warnings": [
          97
        ],
        "safe": [
          89
        ],
        "conflicts": []
      },
      "UnhandledException": {
        "violations": [],
        "warnings": [],
        "safe": [
          89,
          91,
          94,
          96,
          97,
          388
        ],
        "conflicts": []
      },
      "UnrestrictedEtherFlow": {
        "violations": [],
        "warnings": [
          89,
          97
        ],
        "safe": [
          91,
          94,
          96,
          388
        ],
        "conflicts": []
      },
      "UnrestrictedWrite": {
        "violations": [
          64
        ],
        "warnings": [],
        "safe": [],
        "conflicts": []
      }
    },
    "securifyErrors": {
      "errors": []
    }
  }
}