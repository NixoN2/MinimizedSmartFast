{
  "success": true,
  "error": null,
  "results": {
    "detectors": [
      {
        "elements": [
          {
            "type": "node",
            "name": "Test.E(a)",
            "source_mapping": {
              "start": 115,
              "length": 11
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bug",
                "source_mapping": {
                  "start": 67,
                  "length": 69
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Test",
                    "source_mapping": {
                      "start": 24,
                      "length": 114
                    }
                  },
                  "signature": "bug(uint256)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "a",
            "source_mapping": {
              "start": 80,
              "length": 6
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bug",
                "source_mapping": {
                  "start": 67,
                  "length": 69
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Test",
                    "source_mapping": {
                      "start": 24,
                      "length": 114
                    }
                  },
                  "signature": "bug(uint256)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "Test.E(a)",
            "source_mapping": {
              "start": 115,
              "length": 11
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bug",
                "source_mapping": {
                  "start": 67,
                  "length": 69
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Test",
                    "source_mapping": {
                      "start": 24,
                      "length": 114
                    }
                  },
                  "signature": "bug(uint256)"
                }
              }
            }
          }
        ],
        "description": "Test.E(a) () has a dangerous enum conversion\n\t- Variable: Test.bug(uint256).a () of type: uint256\n\t- Enum conversion: Test.E(a) ()\n",
        "markdown": "[Test.E(a)]() has a dangerous enum conversion\n\t- Variable: [Test.bug(uint256).a]() of type: uint256\n\t- Enum conversion: [Test.E(a)]()\n",
        "id": "c306c73c2799e0b932d7a8bf966b605ad26c2ec7f7309cd208be6ba348df37bb",
        "check": "enum-conversion",
        "impact": "Medium",
        "confidence": "exactly"
      },
      {
        "elements": [
          {
            "type": "node",
            "name": "Test.E(a)",
            "source_mapping": {
              "start": 235,
              "length": 11
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bug",
                "source_mapping": {
                  "start": 185,
                  "length": 71
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Test_1",
                    "source_mapping": {
                      "start": 140,
                      "length": 118
                    }
                  },
                  "signature": "bug(int128)"
                }
              }
            }
          },
          {
            "type": "variable",
            "name": "a",
            "source_mapping": {
              "start": 198,
              "length": 8
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bug",
                "source_mapping": {
                  "start": 185,
                  "length": 71
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Test_1",
                    "source_mapping": {
                      "start": 140,
                      "length": 118
                    }
                  },
                  "signature": "bug(int128)"
                }
              }
            }
          },
          {
            "type": "node",
            "name": "Test.E(a)",
            "source_mapping": {
              "start": 235,
              "length": 11
            },
            "type_specific_fields": {
              "parent": {
                "type": "function",
                "name": "bug",
                "source_mapping": {
                  "start": 185,
                  "length": 71
                },
                "type_specific_fields": {
                  "parent": {
                    "type": "contract",
                    "name": "Test_1",
                    "source_mapping": {
                      "start": 140,
                      "length": 118
                    }
                  },
                  "signature": "bug(int128)"
                }
              }
            }
          }
        ],
        "description": "Test.E(a) () has a dangerous enum conversion\n\t- Variable: Test_1.bug(int128).a () of type: int128\n\t- Enum conversion: Test.E(a) ()\n",
        "markdown": "[Test.E(a)]() has a dangerous enum conversion\n\t- Variable: [Test_1.bug(int128).a]() of type: int128\n\t- Enum conversion: [Test.E(a)]()\n",
        "id": "2bc53ad24e93a6b3501abe6c4d6a790b1030344d78576c304646912b5cfcb1f2",
        "check": "enum-conversion",
        "impact": "Medium",
        "confidence": "exactly"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.3",
            "source_mapping": {
              "start": 0,
              "length": 23
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".3"
              ]
            }
          }
        ],
        "description": "Pragma version^0.4.3 () allows old versions\n",
        "markdown": "Pragma version[^0.4.3]() allows old versions\n",
        "id": "2111d9c25ae6332b0d733972aa97825732916b01caeb1c91991cb81b1d60efc1",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "exactly"
      },
      {
        "elements": [
          {
            "type": "pragma",
            "name": "^0.4.3",
            "source_mapping": {
              "start": 0,
              "length": 23
            },
            "type_specific_fields": {
              "directive": [
                "solidity",
                "^",
                "0.4",
                ".3"
              ]
            }
          }
        ],
        "description": "solc-0.4.3 is not recommended for deployment\n",
        "markdown": "solc-0.4.3 is not recommended for deployment\n",
        "id": "89e91481fa523edf3aa43d23e73ed1a70f5c4deb4f4c95ce14da494519ac4658",
        "check": "solc-version",
        "impact": "Informational",
        "confidence": "exactly"
      },
      {
        "elements": [
          {
            "type": "contract",
            "name": "Test_1",
            "source_mapping": {
              "start": 140,
              "length": 118
            },
            "additional_fields": {
              "target": "contract",
              "convention": "CapWords"
            }
          }
        ],
        "description": "Contract Test_1 () is not in CapWords\n",
        "markdown": "Contract [Test_1]() is not in CapWords\n",
        "id": "e37b2dca49f82f408c8259e9f61a3d79bca5200d24516b5b5ea3042d6c0645bd",
        "check": "naming-convention",
        "impact": "Informational",
        "confidence": "exactly"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "bug",
            "source_mapping": {
              "start": 67,
              "length": 69
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Test",
                "source_mapping": {
                  "start": 24,
                  "length": 114
                }
              },
              "signature": "bug(uint256)"
            }
          }
        ],
        "description": "bug(uint256) should be declared external:\n\t- Test.bug(uint256) ()\n",
        "markdown": "bug(uint256) should be declared external:\n\t- [Test.bug(uint256)]()\n",
        "id": "e7e7b02a27fb839527467ddfcbd6ed15cda76b957dfd30666e5cff0faed44114",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "exactly"
      },
      {
        "elements": [
          {
            "type": "function",
            "name": "bug",
            "source_mapping": {
              "start": 185,
              "length": 71
            },
            "type_specific_fields": {
              "parent": {
                "type": "contract",
                "name": "Test_1",
                "source_mapping": {
                  "start": 140,
                  "length": 118
                }
              },
              "signature": "bug(int128)"
            }
          }
        ],
        "description": "bug(int128) should be declared external:\n\t- Test_1.bug(int128) ()\n",
        "markdown": "bug(int128) should be declared external:\n\t- [Test_1.bug(int128)]()\n",
        "id": "8b8de6fd30fc0ab8d0e94916f6d149215e4be220d01a6c7cc508825dfac02590",
        "check": "external-function",
        "impact": "Optimization",
        "confidence": "exactly"
      }
    ]
  }
}