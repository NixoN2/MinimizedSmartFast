[{"severity":2,"argument":"SOLIDITY_CALL_WITHOUT_DATA","starting_column":19,"description_val":"call.value(amountToWithdraw)())) { throw; } // At this point, the caller's code is executed, and can call transfer() (tests/mini_dataset/reentrancy_eth.sol)#15\n","context_ling":15,"text":"call"},{"severity":1,"argument":"SOLIDITY_DEPRECATED_CONSTRUCTIONS","starting_column":54,"description_val":"throw; } // At this point, the caller's code is executed, and can call transfer() (tests/mini_dataset/reentrancy_eth.sol)#15\n","context_ling":15,"text":"throw"},{"severity":1,"argument":"SOLIDITY_PRAGMAS_VERSION","starting_column":16,"description_val":"^0.4.11; (tests/mini_dataset/reentrancy_eth.sol)#1\n","context_ling":1,"text":"^"},{"severity":1,"argument":"SOLIDITY_PRIVATE_MODIFIER_DOES_NOT_HIDE_DATA","starting_column":27,"description_val":"private userBalances; (tests/mini_dataset/reentrancy_eth.sol)#4\n","context_ling":4,"text":"private"},{"severity":1,"argument":"SOLIDITY_REVERT_REQUIRE","starting_column":2,"description_val":"if (!(msg.sender.call.value(amountToWithdraw)())) { throw; } // At this point, the caller's code is executed, and can call transfer() (tests/mini_dataset/reentrancy_eth.sol)#15\n","context_ling":15,"text":"if"},{"severity":1,"argument":"SOLIDITY_UNUSED_FUNCTION_SHOULD_BE_EXTERNAL","starting_column":1,"description_val":"function withdrawBalance() public { (tests/mini_dataset/reentrancy_eth.sol)#13\n","context_ling":13,"text":"function"},{"severity":1,"argument":"SOLIDITY_UPGRADE_TO_050","starting_column":19,"description_val":"call.value(amountToWithdraw)())) { throw; } // At this point, the caller's code is executed, and can call transfer() (tests/mini_dataset/reentrancy_eth.sol)#15\n","context_ling":15,"text":"call"},{"severity":1,"argument":"SOLIDITY_VISIBILITY","starting_column":1,"description_val":"function transfer(address to, uint amount) { (tests/mini_dataset/reentrancy_eth.sol)#6\n","context_ling":6,"text":"function"}]